{
  "hero": {
    "title": "Hi, I'm Fazilabs",
    "subtitle": "Full-Stack Developer & AI Enthusiast",
    "description": "I create amazing digital experiences using cutting-edge technologies. Passionate about building scalable applications and solving complex problems.",
    "primaryButton": "View My Work",
    "secondaryButton": "Get In Touch",
    "backgroundImage": "https://images.unsplash.com/photo-1517180102446-f3ece451e9d8?w=1920&h=1080&fit=crop",
    "profileImage": "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=400&fit=crop"
  },
  "about": {
    "title": "About Me",
    "description": "I'm a passionate full-stack developer with over 5 years of experience creating digital solutions that make a difference. I specialize in modern web technologies and love turning complex problems into simple, beautiful designs.",
    "image": "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=400&fit=crop",
    "highlights": [
      "5+ years of professional experience",
      "Full-stack development expertise",
      "AI and machine learning enthusiast",
      "Open source contributor"
    ],
    "stats": [
      { "label": "Projects Completed", "value": "50+" },
      { "label": "Happy Clients", "value": "30+" },
      { "label": "Code Commits", "value": "1000+" },
      { "label": "Technologies", "value": "20+" }
    ]
  },
  "skills": {
    "Frontend": ["React", "Vue.js", "TypeScript", "Next.js", "Tailwind CSS"],
    "Backend": ["Node.js", "Python", "PHP", "Go", "Express.js"],
    "Database": ["PostgreSQL", "MySQL", "MongoDB", "Redis", "Supabase"],
    "Cloud & DevOps": ["AWS", "Docker", "Kubernetes", "CI/CD", "Terraform"],
    "Tools & Other": ["Git", "Figma", "Postman", "Jest", "GraphQL"]
  },
  "experiences": [
    {
      "title": "Software Security Engineer",
      "company": "Enovise Group",
      "location": "Nairobi, Kenya",
      "period": "2024 - Present",
      "description": "Lead development of scalable web applications serving 100K+ users. Architected microservices infrastructure and mentored junior developers.",
      "technologies": ["React", "Node.js", "AWS", "PostgreSQL", "Docker"],
      "achievements": [
        "Reduced application load time by 40% through optimization",
        "Led team of 5 developers on major product redesign",
        "Implemented CI/CD pipeline reducing deployment time by 60%",
        "Designed and developed Velociraptor API for ThreatSeal using Python, Flask, and modern cloud technologies.",
        "Contributed to the Sigma Broadcast project with robust threat detection using Java, Spring Boot",
        "Upgraded legacy UI to modern React + TypeScript with graph visualizations",
        "Built Corvex backend using Node.js, Express, and PostgreSQL"
      ]
    },
    {
      "title": "Mobile App Developer",
      "company": "Aara Gym Finder",
      "location": "Remote",
      "period": "June 2024 - April 2025",
      "description": "Developed MVP from scratch for tech startup. Built both frontend and backend systems handling gym matching and interactive workout scheduling",
      "technologies": [
        "React Native",
        "Python",
        "FastAPI",
        "PostgreSQL",
        "Redis",
        "Google Cloud Platform"
      ],
      "achievements": [
        "Achieved 99.9% uptime for critical services",
        "Developed full-stack mobile app using React Native, Node js, and later migrated backend to FastAPI",
        "Integrated cloud services: GCP, Firebase, JWT Auth, PostgreSQL, push notifications",
        "Architected modular backend with SQLAlchemy, OAuth, and integration with Google APIs"
      ]
    },
    {
      "title": "System Support  Volunteer & System Support Engineer",
      "company": "Village Hopecore International ",
      "location": "Chogoria, Kenya",
      "period": "Oct 2022 - Sep 2024",
      "description": "Created web apps for organization management and smooth running of the organization.",
      "technologies": [
        "React",
        "JavaScript",
        "Node. js",
        "Webpack",
        "Git",
        "Digital Ocean"
      ],
      "achievements": [
        "Supported MEAPPS Loan System; upgraded Loan UI to React 18 with React Query",
        "Led CommCare data workflows and designed training material for youth programs",
        "Implemented efficient React query fetching techniques and pagination to boost system performance"
      ]
    }
  ],
  "education": [
    {
      "degree": "Bachelor of Science in Computer Science",
      "school": "Kirinyaga University",
      "location": "Kutus, Kenya",
      "period": "2018 - 2022",
      "gpa": "Second class honours Upper Division",
      "achievements": [
        "Data Structures & Algorithms",
        "Objects & Design",
        "Computer Organization & Programming",
        "Machine Learning",
        "Artificial Intelligence",
        "Object-Oriented Programming",
        "Statistics & Applications"
      ]
    }
  ],
  "certifications": [
    {
      "name": "Backend Software Engineering",
      "issuer": "Alx Africa",
      "date": "2023",
      "credentialId": "AWS-SAA-12345"
    }
  ],
  "projects": [
    {
      "id": 1,
      "title": "SM Fundraising Consultants",
      "description": "A business development and fundraising consultancy website for nonprofits and startups.",
      "image": "/images/smfundraisingconsultants.webp",
      "technologies": ["Wordpress", "Elementor", "Astra", "Google My Business"],
      "category": "web",
      "githubUrl": "",
      "liveUrl": "https://smfundraisingconsultants.com/",
      "featured": true
    },
    {
      "id": 2,
      "title": "Triptick Travels",
      "description": "A modern travel agency website for Triptick Travels, offering curated trips and travel resources",
      "image": "/images/triptick-1.webp",
      "technologies": ["Wordpress", "Elementor", "Astra", "Google My Business"],
      "category": "web",
      "githubUrl": "",
      "liveUrl": "https://tripticktravels.com",
      "featured": false
    },
    {
      "id": 3,
      "title": "Aara Admin Dashboard",
      "description": "Admin dashboard to manage Aara fitness platform.",
      "image": "/images/aara-admin.png",
      "technologies": [
        "React js",
        "Vite",
        "Redux",
        "FastAPI",
        "Tailwind css",
        "Shadecn",
        "React Query",
        "Google Cloud Platform"
      ],
      "category": "web",
      "githubUrl": "https://github.com",
      "liveUrl": "https://demo.com",
      "featured": true
    },
    {
      "id": 4,
      "title": "Freelancer Invoicing",
      "description": "Secure freelance invoicing and quote estimator.",
      "image": "/images/freelancerpro.png",
      "technologies": [
        "React js",
        "Vite",
        "Redux",
        "FastAPI",
        "Tailwind css",
        "Shadecn",
        "React Query",
        "Google Cloud Platform"
      ],
      "category": "web",
      "githubUrl": "",
      "liveUrl": "",
      "featured": false
    },
    {
      "id": 5,
      "title": "Triohub Women",
      "description": "A non-profit organization based in Marsarbit Kenya",
      "image": "/images/triohubwomen.webp",
      "technologies": ["Wordpress", "Elementor", "Astra", "Google My Business"],
      "category": "web",
      "githubUrl": "",
      "liveUrl": "https://triohubwomen.org",
      "featured": true
    },
    {
      "id": 6,
      "title": "Jenga Events",
      "description": "A platform that will connect Dj's, MC, Event Planners, Makeup artists and other event service providers with clients. From this platform service providers will be able to also showcase their works.",
      "image": "/images/jengaevents.png",
      "technologies": [
        "React js",
        "Next js",
        "Node js",
        "PostgreSQL",
        "Microsoft Azure",
        "Github Actions"
      ],
      "category": "web",
      "githubUrl": "",
      "liveUrl": "https://jengaevents.fazilabs.com/",
      "featured": true
    },
    {
      "id": 7,
      "title": "Tech Dj Music Downloader",
      "description": "A platform for dj's to prepare their music sets on spotify as playlists and download them for use on their live sets.",
      "image": "/images/techdj.png",
      "technologies": [
        "React js",
        "Next js",
        "FastAPI",
        "PostgreSQL",
        "Microsoft Azure",
        "Github Actions"
      ],
      "category": "web",
      "githubUrl": "",
      "liveUrl": "https://techdj.fazilabs.com",
      "featured": true
    },
    {
      "id": 8,
      "title": "NGO Donation Platform",
      "description": "A work-in-progress donation management platform for NGOs to handle donations, campaigns, and donors with transparency.",
      "image": "/images/ngo-donation.png",
      "technologies": [
        "Next js",
        "Tailwind CSS",
        "Prisma",
        "PostgreSQL",
        "FastAPI",
        "Shadcn",
        "Socket.IO"
      ],
      "category": "web",
      "githubUrl": "",
      "liveUrl": "",
      "featured": false
    }
  ],
  "blogPosts": [
    {
      "id": 1,
      "title": "CI/CD to Azure VM with GitHub Actions, Python, and Nginx",
      "excerpt": "Learn how I set up a full CI/CD pipeline using GitHub Actions to deploy a FastAPI app on an Azure VM, complete with systemd service and Nginx reverse proxy.",
      "content": "<h2>🚀 Introduction</h2>\n<p>In this blog, I’ll walk you through how I set up a <strong>CI/CD pipeline using GitHub Actions</strong> to deploy a Python API hosted on an <strong>Azure VM</strong>. We’ll also cover how to run the app as a service with <strong>systemd</strong> and expose it to the web securely via an <strong>Nginx reverse proxy</strong>.</p>\n\n<h2>🧰 Tools & Stack</h2>\n<ul>\n  <li>GitHub Actions</li>\n  <li>Azure VM (Ubuntu)</li>\n  <li>FastAPI + Uvicorn</li>\n  <li>Python 3.10</li>\n  <li>Alembic (for migrations)</li>\n  <li>Systemd</li>\n  <li>Nginx</li>\n</ul>\n\n<h2>🔐 Step 1: Set Up Azure VM</h2>\n<p>Create an Ubuntu VM on Azure and open necessary ports (22 for SSH, 80 and 443 for web). SSH into the VM:</p>\n<pre><code>ssh azureuser@your-vm-ip</code></pre>\n\n<h3>Create a user and directory</h3>\n<pre><code>sudo adduser deployuser\nsudo mkdir -p /home/deployuser/app\nsudo chown -R deployuser:deployuser\nsudo su - deployuser\ncd /home/deployuser/app</code></pre>\n\n<h2>🐍 Step 2: Clone and Set Up Your FastAPI App</h2>\n<pre><code>cd /home/deployuser/app\ngit clone https://github.com/yourusername/donatehub-api.git\ncd donatehub-api\npython3 -m venv venv\nsource venv/bin/activate\npip install -r requirements.txt</code></pre>\n\n<h2>🔄 Step 3: Create a systemd Service</h2>\n<p>Create a systemd service to run your app:</p>\n<pre><code>sudo nano /etc/systemd/system/donatehub-app.service</code></pre>\n\n<pre><code>[Unit]\nDescription=DonateHub API\nAfter=network.target\n\n[Service]\nUser=deployuser\nWorkingDirectory=/home/deployuser/app/donatehub-api\nExecStart=/home/deployuser/app/donatehub-api/venv/bin/uvicorn app.main:app --host 127.0.0.1 --port 8000\nRestart=always\n\n[Install]\nWantedBy=multi-user.target</code></pre>\n\n<p>Enable and start the service:</p>\n<pre><code>sudo systemctl daemon-reexec\nsudo systemctl enable donatehub-app.service\nsudo systemctl start donatehub-app.service</code></pre>\n\n<h2>🌐 Step 4: Set Up Nginx Reverse Proxy</h2>\n<p>Install and configure Nginx:</p>\n<pre><code>sudo apt update\nsudo apt install nginx</code></pre>\n\n<p>Create a new server block:</p>\n<pre><code>sudo nano /etc/nginx/sites-available/donatehub</code></pre>\n\n<pre><code>server {\n    listen 80;\n    server_name yourdomain.com;\n\n    location / {\n        proxy_pass http://127.0.0.1:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n}</code></pre>\n\n<p>Enable and restart Nginx:</p>\n<pre><code>sudo ln -s /etc/nginx/sites-available/donatehub /etc/nginx/sites-enabled/\nsudo nginx -t\nsudo systemctl restart nginx</code></pre>\n\n<h2>🤖 Step 5: Create GitHub Actions Workflow</h2>\n<p>Add a <code>.github/workflows/deploy.yaml</code> file:</p>\n\n<pre><code>name: Deploy to AZURE\n\non:\n  push:\n    branches:\n      - deployment\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Set up Python\n        uses: actions/setup-python@v5\n        with:\n          python-version: \"3.10\"\n\n      - name: Install dependencies\n        run: |\n          pip install -r requirements.txt\n\n      - name: Deploy via SSH\n        uses: appleboy/ssh-action@v1.0.0\n        with:\n          host: ${{ secrets.AZURE_VM_IP }}\n          username: ${{ secrets.AZURE_VM_USER }}\n          key: ${{ secrets.GCP_SSH_KEY }}\n          script: |\n            cd /home/${{ secrets.AZURE_VM_USER }}/app/donatehub-api\n            git pull origin deployment\n            source venv/bin/activate\n            pip install -r requirements.txt\n            alembic upgrade head\n            sudo systemctl restart donatehub-app.service</code></pre>\n\n<h2>🔐 Step 6: Add GitHub Secrets</h2>\n<ul>\n  <li><strong>AZURE_VM_IP</strong> – Your Azure VM public IP</li>\n  <li><strong>AZURE_VM_USER</strong> – Your SSH username</li>\n  <li><strong>GCP_SSH_KEY</strong> – Your SSH private key (no passphrase)</li>\n</ul>\n\n<h2>✅ Conclusion</h2>\n<p>You now have a robust CI/CD pipeline that:</p>\n<ul>\n  <li>Deploys your FastAPI app automatically</li>\n  <li>Handles dependencies and DB migrations</li>\n  <li>Restarts your service via systemd</li>\n  <li>Is exposed to the world via Nginx</li>\n</ul>\n<p>This setup is reliable, secure, and ideal for real-world deployments. 🚀</p>",
      "image": "/blogs/cicd-github-actions.webp",
      "author": "Brian Murithi",
      "date": "2025-08-05",
      "readTime": "7 min read",
      "tags": [
        "CI/CD",
        "GitHub Actions",
        "Azure",
        "Python",
        "FastAPI",
        "Nginx",
        "DevOps"
      ],
      "featured": true
    },
    {
      "id": 2,
      "title": "Fix Routing Issues on Vercel with a Simple Rewrite Rule",
      "excerpt": "Dealing with 404s when refreshing your React or Vue app on Vercel? Learn how to fix client-side routing issues using a simple `vercel.json` rewrite rule.",
      "content": "<h2>⚠️ The Problem</h2>\n<p>If you're deploying a Single Page Application (SPA) like <strong>React, Vue, or Svelte</strong> on Vercel and refreshing a route like <code>/dashboard</code> leads to a 404, you're not alone. This happens because Vercel tries to serve that exact path as a static file — which doesn't exist.</p>\n\n<h2>🛠️ The Solution</h2>\n<p>To solve this, tell Vercel to rewrite all routes to your root <code>index.html</code> or base entry point. You do this by adding a <code>vercel.json</code> file to your project root:</p>\n\n<pre><code>{\n  \"rewrites\": [\n    { \"source\": \"/(.*)\", \"destination\": \"/\" }\n  ]\n}</code></pre>\n\n<h3>📁 Where to place <code>vercel.json</code></h3>\n<p>Put this file in the root of your project (alongside <code>package.json</code>) so that Vercel picks it up automatically during deployment.</p>\n\n<h2>📦 For React Apps Built with Vite</h2>\n<p>If you're using Vite + React (or other Vite setups), make sure your build script outputs a static build (e.g. <code>vite build</code>), and deploy the <code>dist</code> folder on Vercel. Vercel will serve <code>index.html</code> for all paths when the rewrite is configured correctly.</p>\n\n<h2>🧪 Test Your Fix</h2>\n<p>After deployment:</p>\n<ul>\n  <li>Visit a nested route (e.g. <code>/dashboard</code>)</li>\n  <li>Hit refresh</li>\n  <li>You should stay on the page without a 404</li>\n</ul>\n\n<h2>✅ Bonus: Next.js Apps Don’t Need This</h2>\n<p>If you’re using Next.js with App Router or Pages Router, Vercel handles routing automatically, so you don’t need a rewrite unless customizing behavior.</p>\n\n<h2>🔚 Conclusion</h2>\n<p>This small config unlocks full client-side routing support for your SPA on Vercel, avoiding broken navigation and 404 pages on refresh. It’s a must-have for frontend frameworks not using file-based routing like Next.js.</p>\n\n<blockquote><strong>TL;DR:</strong> Add a <code>vercel.json</code> with a rewrite to solve SPA routing on Vercel. Simple but powerful. 💡</blockquote>",
      "image": "/blogs/vercel-routing-fix.webp",
      "author": "Brian Murithi",
      "date": "2025-08-06",
      "readTime": "3 min read",
      "tags": [
        "Vercel",
        "Routing",
        "React",
        "Vue",
        "DevOps",
        "Deployment",
        "Frontend"
      ],
      "featured": true
    }
  ]
}
